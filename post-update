#!/bin/bash

# This script is called after the website is updated
# Constants and functions are defined at the top, the script is at the bottom

ROOT="`pwd`"
OUT_DIR="out"

setup_venv(){

    # Set up the virtualenv for the python app
    echo "Checking virtualenv for '"$1"'"

    if [[ ! -d $ROOT/"$1" ]]; then
        echo "No folder to setup virtualenv in found"
        # Signal an error occured
        return 2
    fi
    cd $ROOT/"$1"

    if [[ ! -d venv ]]; then
        # Application virtualenv not configured, configure it
        echo "Virtualenv not found, setting one up"

        if ! virtualenv venv; then
            echo "Setting up virtualenv failed"
            # Signal an error occured
            return 2
        fi

        # Signal that the venv was created
        ret=1
    else
        echo "Found virtualenv, activating it"

        # Signal that the venv was found
        ret=0
    fi

    source venv/bin/activate
    if [[ -f requirements.txt ]]; then
        pip install -r requirements.txt
    fi

    return $ret
}

run_gunicorn(){

    setup_venv "$1"
    status=$?

    if [[ $status -eq 2 ]]; then
        # Failed to create the virtualenv, can't continue
        echo "Couldn't find or create the virtualenv, not starting the application"
        return
    elif [[ $status -eq 1 ]]; then
        # Virtual env was created, not found - needs gunicorn
        pip install gunicorn
    fi

    # (Re)start gunicorn
    if [[ -f gunicorn.pid ]] && kill -HUP "`cat gunicorn.pid`"; then
        echo "Restarted gunicorn"
    else
        echo "Starting gunicorn"
        gunicorn app:app -b "unix:///tmp/"`basename "$1"`".socket" -w 1 -D -p gunicorn.pid
    fi

    # Leave the vitualenv
    deactivate
}

generate_site(){

    # Setup the virtualenv
    setup_venv pelican

    # Check for lessc LESS compiler
    need_less=`grep -q "SERVER_LESS\s*=\s*True\|1" publishconf.py`$?

    if [[ $need_less -eq 0 ]] && ! which lessc >/dev/null; then
        echo "**********WARNING: SITE WILL NOT BE GENERATED**********"
        echo "No LESS compiler installed, but Pelican is configured to use one"
    else
        if [[ $need_less -eq 0 ]]; then
            echo "Compiling the LESS file"
            lessc theme/static/css/style.less theme/static/css/style.css
        fi
        echo "Generating the site"
        pelican -s publishconf.py -o $ROOT/$OUT_DIR/www content
    fi

    # Leave the vitualenv
    deactivate
}

generate_configs(){
    # Make the directory for the config files
    mkdir -p $ROOT/$OUT_DIR/_conf

    # Replace {{root}} and {{output}} in config files as they're copied
    for f in $ROOT/web_config/*.conf; do
        sed -e "s|{{root}}|$ROOT|g" \
            -e "s|{{output}}|$ROOT/$OUT_DIR|g" \
            "$f" > $ROOT/$OUT_DIR/_conf/`basename "$f"`
    done
}

echo "Running post-update script"

echo "Checking dependencies"
dependencies=( "pip" "virtualenv" )
for command in ${dependencies[@]}; do
    if ! which $command &>/dev/null; then
        echo "Missing dependency '$command', exiting"
        exit 1
    fi
done

# Update the submodules
echo "Updating submodules"
git submodule update --init --recursive --force

# Run/restart mag2tor
run_gunicorn $OUT_DIR/mag2tor

# Run/restart gh-i2p
run_gunicorn $OUT_DIR/gh-i2p

# Generate the site
generate_site

# Generate the Nginx config files
generate_configs

# Restart the webserver to apply changes
echo "Restarting the webserver"
sudo /etc/init.d/nginx restart
